{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\satish\\\\totality-frontend-challenge\\\\src\\\\components\\\\Rooms\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dummyProperties = [{\n  id: 1,\n  name: 'Luxury Apartment',\n  location: 'New York, NY',\n  price: 3000,\n  bedrooms: 2,\n  amenities: ['Swimming Pool', 'Gym', 'Parking']\n}, {\n  id: 2,\n  name: 'Cozy Cottage',\n  location: 'Los Angeles, CA',\n  price: 2000,\n  bedrooms: 1,\n  amenities: ['Garden', 'Fireplace']\n}, {\n  id: 3,\n  name: 'Modern Condo',\n  location: 'Chicago, IL',\n  price: 2500,\n  bedrooms: 2,\n  amenities: ['Balcony', 'Fitness Center']\n}, {\n  id: 4,\n  name: 'Downtown Loft',\n  location: 'San Francisco, CA',\n  price: 4000,\n  bedrooms: 3,\n  amenities: ['City View', 'Security']\n}, {\n  id: 5,\n  name: 'Lake House',\n  location: 'Seattle, WA',\n  price: 3500,\n  bedrooms: 2,\n  amenities: ['Lakefront', 'Boat Dock']\n}];\nconst PropertyFilter = ({\n  properties\n}) => {\n  _s();\n  const [filteredProperties, setFilteredProperties] = useState(properties); // Initialize with all properties\n  const [filters, setFilters] = useState({\n    location: '',\n    minPrice: '',\n    maxPrice: '',\n    minBedrooms: '',\n    amenities: ''\n  });\n  const handleFilterChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFilters(prevFilters => ({\n      ...prevFilters,\n      [name]: value\n    }));\n  };\n  const applyFilters = () => {\n    let filtered = [...properties];\n    if (filters.location) {\n      filtered = filtered.filter(property => property.location.toLowerCase().includes(filters.location.toLowerCase()));\n    }\n    if (filters.minPrice && filters.maxPrice) {\n      filtered = filtered.filter(property => property.price >= parseInt(filters.minPrice) && property.price <= parseInt(filters.maxPrice));\n    }\n    if (filters.minBedrooms) {\n      filtered = filtered.filter(property => property.bedrooms >= parseInt(filters.minBedrooms));\n    }\n    if (filters.amenities) {\n      filtered = filtered.filter(property => property.amenities.includes(filters.amenities));\n    }\n    setFilteredProperties(filtered);\n  };\n  const clearFilters = () => {\n    setFilters({\n      location: '',\n      minPrice: '',\n      maxPrice: '',\n      minBedrooms: '',\n      amenities: ''\n    });\n    setFilteredProperties(properties); // Reset to all properties\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(PropertyFilter, \"ZdGXZmoO5k/5FrtwVxs4jFeDIlo=\");\n_c = PropertyFilter;\nexport default PropertyFilter;\nvar _c;\n$RefreshReg$(_c, \"PropertyFilter\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","dummyProperties","id","name","location","price","bedrooms","amenities","PropertyFilter","properties","_s","filteredProperties","setFilteredProperties","filters","setFilters","minPrice","maxPrice","minBedrooms","handleFilterChange","e","value","target","prevFilters","applyFilters","filtered","filter","property","toLowerCase","includes","parseInt","clearFilters","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/satish/totality-frontend-challenge/src/components/Rooms/index.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst dummyProperties = [\r\n  {\r\n    id: 1,\r\n    name: 'Luxury Apartment',\r\n    location: 'New York, NY',\r\n    price: 3000,\r\n    bedrooms: 2,\r\n    amenities: ['Swimming Pool', 'Gym', 'Parking']\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Cozy Cottage',\r\n    location: 'Los Angeles, CA',\r\n    price: 2000,\r\n    bedrooms: 1,\r\n    amenities: ['Garden', 'Fireplace']\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Modern Condo',\r\n    location: 'Chicago, IL',\r\n    price: 2500,\r\n    bedrooms: 2,\r\n    amenities: ['Balcony', 'Fitness Center']\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Downtown Loft',\r\n    location: 'San Francisco, CA',\r\n    price: 4000,\r\n    bedrooms: 3,\r\n    amenities: ['City View', 'Security']\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Lake House',\r\n    location: 'Seattle, WA',\r\n    price: 3500,\r\n    bedrooms: 2,\r\n    amenities: ['Lakefront', 'Boat Dock']\r\n  }\r\n];\r\n\r\nconst PropertyFilter = ({ properties }) => {\r\n  const [filteredProperties, setFilteredProperties] = useState(properties); // Initialize with all properties\r\n  const [filters, setFilters] = useState({\r\n    location: '',\r\n    minPrice: '',\r\n    maxPrice: '',\r\n    minBedrooms: '',\r\n    amenities: ''\r\n  });\r\n\r\n  const handleFilterChange = e => {\r\n    const { name, value } = e.target;\r\n    setFilters(prevFilters => ({\r\n      ...prevFilters,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const applyFilters = () => {\r\n    let filtered = [...properties];\r\n\r\n    if (filters.location) {\r\n      filtered = filtered.filter(property =>\r\n        property.location.toLowerCase().includes(filters.location.toLowerCase())\r\n      );\r\n    }\r\n\r\n    if (filters.minPrice && filters.maxPrice) {\r\n      filtered = filtered.filter(\r\n        property =>\r\n          property.price >= parseInt(filters.minPrice) &&\r\n          property.price <= parseInt(filters.maxPrice)\r\n      );\r\n    }\r\n\r\n    if (filters.minBedrooms) {\r\n      filtered = filtered.filter(\r\n        property =>\r\n          property.bedrooms >= parseInt(filters.minBedrooms)\r\n      );\r\n    }\r\n\r\n    if (filters.amenities) {\r\n      filtered = filtered.filter(property =>\r\n        property.amenities.includes(filters.amenities)\r\n      );\r\n    }\r\n\r\n    setFilteredProperties(filtered);\r\n  };\r\n\r\n  const clearFilters = () => {\r\n    setFilters({\r\n      location: '',\r\n      minPrice: '',\r\n      maxPrice: '',\r\n      minBedrooms: '',\r\n      amenities: ''\r\n    });\r\n    setFilteredProperties(properties); // Reset to all properties\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Filter inputs and buttons */}\r\n      {/* Display filtered properties */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PropertyFilter;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,eAAe,GAAG,CACtB;EACEC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,kBAAkB;EACxBC,QAAQ,EAAE,cAAc;EACxBC,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAE,CAAC;EACXC,SAAS,EAAE,CAAC,eAAe,EAAE,KAAK,EAAE,SAAS;AAC/C,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,cAAc;EACpBC,QAAQ,EAAE,iBAAiB;EAC3BC,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAE,CAAC;EACXC,SAAS,EAAE,CAAC,QAAQ,EAAE,WAAW;AACnC,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,cAAc;EACpBC,QAAQ,EAAE,aAAa;EACvBC,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAE,CAAC;EACXC,SAAS,EAAE,CAAC,SAAS,EAAE,gBAAgB;AACzC,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,eAAe;EACrBC,QAAQ,EAAE,mBAAmB;EAC7BC,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAE,CAAC;EACXC,SAAS,EAAE,CAAC,WAAW,EAAE,UAAU;AACrC,CAAC,EACD;EACEL,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,YAAY;EAClBC,QAAQ,EAAE,aAAa;EACvBC,KAAK,EAAE,IAAI;EACXC,QAAQ,EAAE,CAAC;EACXC,SAAS,EAAE,CAAC,WAAW,EAAE,WAAW;AACtC,CAAC,CACF;AAED,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGd,QAAQ,CAACW,UAAU,CAAC,CAAC,CAAC;EAC1E,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC;IACrCM,QAAQ,EAAE,EAAE;IACZW,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE,EAAE;IACfV,SAAS,EAAE;EACb,CAAC,CAAC;EAEF,MAAMW,kBAAkB,GAAGC,CAAC,IAAI;IAC9B,MAAM;MAAEhB,IAAI;MAAEiB;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCP,UAAU,CAACQ,WAAW,KAAK;MACzB,GAAGA,WAAW;MACd,CAACnB,IAAI,GAAGiB;IACV,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIC,QAAQ,GAAG,CAAC,GAAGf,UAAU,CAAC;IAE9B,IAAII,OAAO,CAACT,QAAQ,EAAE;MACpBoB,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CAACC,QAAQ,IACjCA,QAAQ,CAACtB,QAAQ,CAACuB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACf,OAAO,CAACT,QAAQ,CAACuB,WAAW,CAAC,CAAC,CACzE,CAAC;IACH;IAEA,IAAId,OAAO,CAACE,QAAQ,IAAIF,OAAO,CAACG,QAAQ,EAAE;MACxCQ,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CACxBC,QAAQ,IACNA,QAAQ,CAACrB,KAAK,IAAIwB,QAAQ,CAAChB,OAAO,CAACE,QAAQ,CAAC,IAC5CW,QAAQ,CAACrB,KAAK,IAAIwB,QAAQ,CAAChB,OAAO,CAACG,QAAQ,CAC/C,CAAC;IACH;IAEA,IAAIH,OAAO,CAACI,WAAW,EAAE;MACvBO,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CACxBC,QAAQ,IACNA,QAAQ,CAACpB,QAAQ,IAAIuB,QAAQ,CAAChB,OAAO,CAACI,WAAW,CACrD,CAAC;IACH;IAEA,IAAIJ,OAAO,CAACN,SAAS,EAAE;MACrBiB,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CAACC,QAAQ,IACjCA,QAAQ,CAACnB,SAAS,CAACqB,QAAQ,CAACf,OAAO,CAACN,SAAS,CAC/C,CAAC;IACH;IAEAK,qBAAqB,CAACY,QAAQ,CAAC;EACjC,CAAC;EAED,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACzBhB,UAAU,CAAC;MACTV,QAAQ,EAAE,EAAE;MACZW,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAE,EAAE;MACfV,SAAS,EAAE;IACb,CAAC,CAAC;IACFK,qBAAqB,CAACH,UAAU,CAAC,CAAC,CAAC;EACrC,CAAC;EAED,oBACET,OAAA;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGK,CAAC;AAEV,CAAC;AAACxB,EAAA,CApEIF,cAAc;AAAA2B,EAAA,GAAd3B,cAAc;AAsEpB,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}